<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2021-05-07 15:01:59              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Admin; use DB; use App\Package; use Carbon\Carbon; use Illuminate\Http\Request; use App\Services\PackageInstaller; use App\Http\Controllers\Controller; use App\Http\Requests\Validations\PackageInstallationRequest; class PackagesController extends Controller { public function index() { $installables = $this->scanPackages(); $installs = Package::all(); return view("\x61\144\x6d\x69\156\x2e\x70\141\143\153\141\x67\x65\163\x2e\x69\x6e\x64\145\170", compact("\151\156\163\164\x61\154\154\x61\142\x6c\145\x73", "\x69\x6e\x73\164\x61\x6c\154\163")); } public function upload() { return view("\x61\144\155\151\156\x2e\160\141\x63\153\x61\x67\145\x73\x2e\137\165\160\x6c\x6f\x61\144"); } public function save(Request $request) { echo "\x3c\160\162\145\76"; print_r($request->all()); echo "\74\160\162\x65\76"; exit("\x65\156\144\x21"); } public function initiate(Request $request, $package) { if (!(config("\141\160\x70\56\x64\x65\x6d\157") == true && config("\x61\160\x70\56\144\x65\142\165\147") !== true)) { goto mO9St; } return back()->with("\167\141\162\x6e\x69\x6e\147", trans("\155\x65\163\163\141\x67\x65\163\56\x64\145\x6d\157\x5f\162\x65\163\164\x72\151\143\x74\151\157\x6e")); mO9St: $installable = $this->scanPackages($package); if (!$installable) { goto rsPx5; } if (!Package::where("\x73\x6c\165\x67", $installable["\163\154\x75\x67"])->first()) { goto G5y66; } return back()->with("\x65\162\x72\x6f\x72", trans("\x6d\145\x73\x73\141\x67\145\163\x2e\160\141\143\x6b\x61\147\x65\x5f\151\x6e\x73\164\141\154\x6c\145\144\x5f\x61\x6c\162\x65\x61\144\171", ["\x70\x61\143\x6b\141\147\x65" => $package])); G5y66: rsPx5: return view("\141\144\155\151\156\56\160\141\143\153\x61\x67\145\x73\x2e\x5f\x69\156\151\164\151\141\x74\x65", compact("\151\x6e\163\164\141\x6c\x6c\x61\142\x6c\x65")); } public function install(PackageInstallationRequest $request, $package) { if (!(config("\x61\160\160\x2e\x64\145\155\157") == true && config("\x61\x70\x70\56\x64\145\x62\x75\147") !== true)) { goto pfrmT; } return back()->with("\167\x61\x72\x6e\151\x6e\147", trans("\155\x65\x73\163\x61\x67\x65\163\x2e\144\x65\155\x6f\137\162\x65\163\164\162\x69\143\x74\151\157\x6e")); pfrmT: $installable = $this->scanPackages($package); if (!$installable) { goto KiQK2; } DB::beginTransaction(); try { $installer = new PackageInstaller($request, $installable); if (!$installer->install()) { goto HBsfy; } DB::commit(); $msg = trans("\x6d\145\163\163\141\x67\145\x73\x2e\160\141\x63\x6b\x61\x67\145\137\151\156\163\164\x61\154\x6c\145\x64\137\x73\x75\143\143\145\163\x73", ["\x70\x61\x63\x6b\x61\x67\145" => $package]); return back()->with("\163\165\x63\x63\145\163\x73", $msg); HBsfy: } catch (\Exception $e) { DB::rollback(); \Log::error($e); return back()->with("\145\162\x72\157\x72", $e->getMessage()); } KiQK2: return back()->with("\x65\162\162\x6f\162", trans("\155\x65\163\x73\141\147\145\x73\x2e\x66\x61\x69\154\145\x64")); } public function uninstall(Request $request, $package) { if (!(config("\x61\160\x70\56\x64\145\x6d\x6f") == true && config("\141\x70\160\x2e\x64\x65\x62\x75\x67") !== true)) { goto itAdW; } return back()->with("\x77\x61\x72\x6e\x69\x6e\147", trans("\x6d\x65\x73\163\141\x67\x65\x73\56\144\145\155\x6f\137\x72\145\x73\164\162\151\x63\x74\151\157\156")); itAdW: $registered = Package::where("\x73\154\x75\x67", $package)->firstOrFail(); DB::beginTransaction(); try { $installer = new PackageInstaller($request, $registered->toArray()); if (!$installer->uninstall()) { goto U_BF1; } DB::commit(); if (!$registered->delete()) { goto SLjc7; } $msg = trans("\x6d\x65\163\x73\x61\147\145\163\x2e\160\141\143\x6b\x61\x67\145\137\165\x6e\x69\156\x73\x74\x61\x6c\154\145\144\x5f\x73\x75\143\x63\145\163\x73", ["\x70\141\x63\x6b\x61\x67\145" => $package]); return back()->with("\163\165\x63\143\145\x73\x73", $msg); SLjc7: U_BF1: } catch (\Exception $e) { DB::rollback(); \Log::error($e); return back()->with("\145\x72\162\157\x72", $e->getMessage()); } return back()->with("\x65\162\162\x6f\x72", trans("\x6d\x65\x73\x73\x61\x67\145\163\56\x66\x61\151\x6c\x65\144")); } public function activation(Request $request, $package) { if (!(config("\141\x70\160\x2e\x64\x65\155\157") == true && config("\x61\160\x70\x2e\144\145\142\x75\147") !== true)) { goto SVVFP; } return response("\x65\162\162\157\162", 444); SVVFP: if (!($registered = Package::where("\x73\x6c\x75\x67", $package)->first())) { goto CLFm_; } $registered->active = !$registered->active; $registered->save(); return response("\163\x75\143\143\x65\x73\x73", 200); CLFm_: $unregistered = $this->scanPackages($package); \Log::info($unregistered); if (!$unregistered) { goto Sbxaf; } $registered = Package::create($unregistered); Sbxaf: return response("\x73\165\143\x63\x65\163\x73", 200); } public function updateConfig(Request $request) { if (!updateOptionTable($request)) { goto jiLaf; } return back()->with("\x73\165\143\143\145\x73\x73", trans("\x6d\145\x73\163\x61\147\x65\x73\56\x70\x61\143\x6b\x61\147\145\137\163\145\x74\164\151\156\147\163\137\165\160\x64\141\x74\145\144")); jiLaf: return back()->with("\145\x72\x72\157\162", trans("\x6d\x65\x73\x73\x61\147\145\163\56\146\141\x69\154\145\x64")); } public function toggleConfig(Request $request, $option) { if (!(config("\141\x70\160\x2e\x64\x65\x6d\157") == true && config("\141\x70\160\x2e\144\x65\x62\165\x67") !== true)) { goto GnU6g; } return response("\145\x72\162\x6f\162", 444); GnU6g: if (!\DB::table("\157\160\x74\x69\157\x6e\x73")->where("\x6f\x70\164\151\157\x6e\137\156\x61\x6d\x65", $option)->update(["\157\x70\164\151\x6f\156\137\x76\x61\154\x75\145" => \DB::raw("\x4e\117\x54\x20\x6f\160\x74\151\x6f\x6e\137\x76\x61\154\x75\145")])) { goto UnAAy; } return response("\x73\165\143\x63\x65\x73\163", 200); UnAAy: return response("\145\x72\162\157\162", 405); } private function scanPackages($slug = Null) { $packages = []; foreach (glob(base_path("\x70\x61\143\153\x61\x67\x65\163\57\x2a"), GLOB_ONLYDIR) as $dir) { if (!file_exists($manifest = $dir . "\57\155\x61\156\151\146\x65\x73\164\56\x6a\x73\157\156")) { goto Fo0II; } $json = file_get_contents($manifest); if (!($json !== '')) { goto Ix7UO; } $data = json_decode($json, true); if (!($data === null)) { goto YifOt; } throw new \Exception("\x49\156\x76\141\x6c\x69\144\40\155\x61\x6e\x69\x66\x65\163\x74\56\x6a\163\x6f\156\x20\146\151\x6c\x65\x20\x61\164\40\133{$dir}\135"); YifOt: if (!($slug && $data["\163\154\x75\147"] == $slug)) { goto f5vjL; } return $data; f5vjL: $packages[] = $data; Ix7UO: Fo0II: P1xHi: } ib2L5: return $packages; } }